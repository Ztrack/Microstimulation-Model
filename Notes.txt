***https://www.ncbi.nlm.nih.gov/pmc/articles/PMC2874753/
- In this study, we see microstimulation activates only a sparse set of neurons directly around the stimulation site. This suggests the major factor in explaining microstimulation may be synaptic transmission 

- NEED: Neuron density - how to go about calculating how many neurons will be affected
Other studies:
https://journals.plos.org/ploscompbiol/article?id=10.1371/journal.pcbi.1006522#pcbi.1006522.ref032

-----------------------------------------
Implement 100% on same side, 25% on every other side
Blue = non-motion tuned excitatory
Green = motion tuned excitatory
yellow (?) = oscillatory inhibitory
Red = inhibitory
pg 8 plot - Label curves as P1,P2,P3,etc
look into how to assess overfit. If it crosses 0 then 
pg 10 plot 1: 0.01,0.03,0.1,0.125,0.15,0.2
run data with 9000 connections & have it ready
pg 27: Break down into direction
try and activate 25% motion tuned neurons with same tuning

-----------------------------------------
Fix targeted neuron graphics to show over total, not over each population & Total numbers
1a) Motif with spike poisson, no inhibition
1b) Inhibition used
1c) Inhibition Poisson
2 a/b/c ^ Same but with stimulus 
3) FFT on spikes
4) Neurons activated per step but seperate inhibitory into oscillatory (yellow) and non-oscillatory (red)

-------------------------------------------
0.005 : 0.0025 for axon multiplier & run & analyze
Divide palm and wrist in hand image
Add motion tuned neurons to neural population map, use the one with excitatory axons
put in equations for plot neuron RB vs distance to stimulus (Excitatory vs inhibitory) 
Last plot pg 24: Number + Percentage neurons stimulated
whole spike train FFT, average power spectrum over # trials for :
	Excitatory neuron
	Inhibitory Neurons
	oscillatory neuron 40 Hz 
For ALL motion vs non-motion tuned plots : In addition to total # and percentage, add plot and normalize relative to # motion tuned neurons divide by number of activated motion tuned (NOT TOTAL # MOTION TUNED)
	- If Add third plot divided by max # motion tuned neurons
	
-------------------------------------------
split into inhibitory oscillatory/non oscillatory
Take FFT for excitatory, inhibitory, inhibitory oscillatory and average power spectrum across neurons
Standard Error w/ N = # neurons
plot power spectrum density from 1 - 80Hz
Prior to stimulation solid
Post stimulation dashed
Numtrials = 1000;
Normalize
- Fix Neural population map to be more representative
- Fix D3 to M3
--------------------------------------------
Make one color, solid for pre-stim and dashed for post-stim : FFT Plots. Inhib = red, excite = blue
power spectrum : Add Confidence intervals


For the poster:
Optogenetic inhibitory: look at how it affects motion and non motion. inhib vs oscillatory (pg 17)
Inhibitory Gamma OSC instead of Inhibitory OSC

------------------------------------------------------
for thursday:
FFT inhibitory oscillatory neuron : Microstim for 25% motion tuned Initial condition
microstim optomization alone 10x10
optogenetics optimization alone 10x10
ms + opto 10x10 elec ?
ms + opto optimization 4x4 electrodes

for ms:
calculate lambda_hat 95% thesh value based on lambda_hat
set lambda_hat_95 as threshold for sum(d*current) for all electrodes



Setup a github


increase npop to get opto ratio under 1

for ms/opto alone + combination
display the electrical field generated 
display the electrical field generated on top of the population map - instead of background white, have it be electrical pop. do a transparency thing, make it more transparent
create difference map : Population map firing rate. See how pop map is modulated based on optimal electrical & optical feld generated

to seperate r0 and m : create a function. how m and r0 changes. How microstimulation modulates the r0 and the m. m is the change between the overall rate and the peak of the activity. 

on the fft:
change in m is pre stim - post stim 
m tells us the change in amplitude of the oscillation
r0 tells us the baseline of the firing rate. 

vary the microstimulation steps and compute r0 and m. 